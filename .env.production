 /******************************
Node environment setup
******************************/

NODE_ENV=Production

/******************************
db and mongoDBOptions are used for database connection (mongoose.js file)
******************************/

db=mysql://foodjin@foodjin-mysql-prod:VhgZs2hep4YLjaGGXFE57WCQKgNX8CZN@foodjin-mysql-prod.mysql.database.azure.com:3306/foodjin_prod
/******************************
Api listening port (server.js file)
******************************/

serverPort = 5014

/******************************	
Socket  port (server.js file)	
******************************/	
redisUrl = 10.10.6.4	
redisPort = 6000
redisPassword = WCuQBftj9N9T4jJWsEGnxgWsXUG6EDQR

/******************************
Secret keys these are used in token generation (globals.js file)
******************************/

sessionSecret= indNIC2305
securityToken= indNIC2305
securityRefreshToken= indNIC2305refresh

/******************************
we append baseApiUrl infront of api endpoints (in all routes.js file)
******************************/

baseApiUrl= /customer-service/api

/******************************
apiUrl of the application
******************************/

apiUrl= https://api.foodjin.org

/******************************
rootUrl (apiUrl+ baseApiUrl) of the application
******************************/

rootUrl= https://api.foodjin.org/customer-service/api

/******************************
FrontUrl's, in emails we use these url's in links, when use click on that link it will redirect to that front page.
******************************/

frontUrl= https://admin.foodjin.org
frontUrlAngular= https://admin.foodjin.org/#/public

/******************************
defaultEmailId (from mail of the email) (email.js)
******************************/

defaultEmailId= meanstack2017@gmail.com
  
/******************************
localImagePath (images will upload in this path) (file.js)
******************************/

localImagePath: /public/upload/images/

/******************************
s3upload (if we change s3upload to true then images will upload on s3 server, until unless upload in local server)
******************************/
s3upload= false
s3ImagePath= " "
azureUrl=https://foodjinappimages.blob.core.windows.net/app-images/

azureContainerName='app-images'

/******************************
user security (based on the keys, action will perform) (globals.js)
******************************/

dontAllowPreviouslyUsedPassword= true
storePreviouslyUsedPasswords= false

forceToUpdatePassword= true

 /***** In months *****/
updatePasswordPeriod= 4

allowedFailAttemptsOfLogin= 5
isBlockAfterFailedAttempt= true

/***** In minutes *****/
timeDurationOfBlockingAfterWrongAttempts= 15 

/******************************
Different types of token expiration times and token extension permissions (globals.js)
******************************/
 /***** In minutes *****/
tokenExpirationTime= 540 

 /***** In minutes *****/
forgotTokenExpireTime= 60 

 /***** In minutes *****/
verificationTokenExpireTime= 60
 
/***** Note: in seconds! (1 day) *****/
tokenExpiry= 361440

extendTokenTime= true
useRefreshToken= true

/******************************
# Twilio account credentials
******************************/
twilioAccountSid=ACdf467fd1a69098aba2506b5ac83df3ee
twilioAuthToken=edc61a6b270c333ba884a5dcb0a362e7
twilioPhoneNumber=19062088477


/******************************
# Stripe account credentials
******************************/
stripeSecretKey=pk_live_9mNerPYqOv0VtBhtgdkFHKpI00pSC0mxsv


/******************************
These keys are used for swagger implementation (server.js file)
******************************/

host = 10.2.99.28:4005
isHTTPAuthForSwagger= true
HTTPAuthUser= indianic
HTTPAuthPassword= indianic


AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=foodjinappimages;AccountKey=jBz8vkE2lijHmnRLMtZ9HECEjBxhYPSQHDXWiY11lgWhYMrUG6C7jrjJ+FLTL4js9XonhXvW06ph89V62xiSjA==;EndpointSuffix=core.windows.net